syntax = "proto3";

package wordcount_mr;

service WordCountMR {
  rpc GetTask(Status) returns (Task) {}
}


message Task {

  enum TaskType {
    MAP = 0;
    REDUCE = 1;
    WAIT = 2;
    TERMINATE = 3;
  }

  // common
  TaskType type = 1;
  optional string input_path = 2;
  optional string output_path = 3;
  repeated string input_file_names = 4;
  optional string output_file_name = 5;
  optional int32 job_id = 6;

  // map-specific
  optional bool ignore_case = 7;
  optional bool sort = 8;
  optional int32 n_buckets = 9;

  // reduce-specific
  optional bool merge_join = 10;

  // wait-specific
  optional int32 wait_milliseconds = 11;
}


message TaskRequest {

  enum Status {
    INIT = 0;
    SUCCESS = 1;
    FAILURE = 2;
  }

  Status status = 1;
  int32 worker_id = 2;
  repeated string output_file_names = 3;
  repeated string warnings = 4;
}
